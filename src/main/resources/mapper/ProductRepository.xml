<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.coffee.model.repository.ProductRepository">

<select id="findAll" resultType="org.example.coffee.model.dto.ProductDTO">
SELECT BIN_TO_UUID(PRODUCT_ID) AS 'productId', PRODUCT_NAME AS 'productName', CATEGORY, PRICE, DESCRIPTION, CREATED_AT AS 'createdAt', UPDATED_AT AS 'updatedAt' FROM PRODUCTS
ORDER BY CREATED_AT DESC
</select>

<select id="findAllCategory" resultType="string">
SELECT DISTINCT CATEGORY FROM PRODUCTS
</select>

<select id="findByCategory" parameterType="string" resultType="org.example.coffee.model.dto.ProductDTO">
SELECT BIN_TO_UUID(PRODUCT_ID) AS 'productId', PRODUCT_NAME AS 'productName', CATEGORY, PRICE, DESCRIPTION, CREATED_AT AS 'createdAt', UPDATED_AT AS 'updatedAt' FROM PRODUCTS
WHERE CATEGORY = #{cat}
ORDER BY CREATE_AT
</select>

<insert id="insertProduct" parameterType="org.example.coffee.model.dto.ProductDTO">
INSERT INTO PRODUCTS(PRODUCT_ID, PRODUCT_NAME, CATEGORY, PRICE, DESCRIPTION, CREATED_AT)
VALUES(UUID_TO_BIN(UUID()), #{productName}, #{category}, #{price}, #{description}, NOW())
</insert>

<update id="updateProduct" parameterType="org.example.coffee.model.dto.ProductDTO">
UPDATE PRODUCTS SET
    <if test="productName != null">
        PRODUCT_NAME = #{productName},
    </if>
    <if test="category != null">
        CATEGORY = #{category},
    </if>
    <if test="price != 0">
        PRICE = #{price},
    </if>
    <if test="description != null">
        DESCRIPTION = #{description},
    </if>
    UPDATED_AT = #{updatedAt}
WHERE BIN_TO_UUID(PRODUCT_ID) = #{productId}
</update>

<delete id="deleteProduct" parameterType="string">
DELETE FROM PRODUCTS WHERE BIN_TO_UUID(PRODUCT_ID) = #{productId}
</delete>

</mapper>